{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d4509046-288c-407d-8933-a9899e0173d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the coupon rate stated in APR in decimal form (i.e. 0.1 for 10%):  .08\n",
      "Enter term to maturity:  5\n",
      "Enter yield to maturity stated in APR in decimal form (i.e. .1 for 10%):  .06\n",
      "Enter par value or hit Enter if 1000:  \n",
      "Enter times compounded in a year or hit Enter if 2:  \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "The present value of the bond is: $1085.3\n",
      "\n",
      "The duration is: 4.25\n",
      "\n",
      "The modified duration is 4.13\n"
     ]
    }
   ],
   "source": [
    "coupon_rate = float(input(\"Enter the coupon rate stated in APR in decimal form (i.e. 0.1 for 10%): \"))\n",
    "ttm = int(input(\"Enter term to maturity: \"))\n",
    "ytm = float(input(\"Enter yield to maturity stated in APR in decimal form (i.e. .1 for 10%): \"))\n",
    "par_str = input(\"Enter par value or hit Enter if 1000: \")\n",
    "comp_str = input(\"Enter times compounded in a year or hit Enter if 2: \")\n",
    "par = 1000\n",
    "comp = 2\n",
    "# makes sure that if its an empty string the default values are assigned for par and comp\n",
    "if par_str != '':\n",
    "    par = int(par_str)\n",
    "if comp_str != '':\n",
    "    comp = int(comp_str)\n",
    "\n",
    "\n",
    "periods = comp * ttm\n",
    "p_CF = par * coupon_rate / comp\n",
    "p_ytm = ytm / comp\n",
    "discounted_CF = []\n",
    "PV = 0\n",
    "i = 1\n",
    "# computes the discounted cash flows of the bond\n",
    "while i < periods:\n",
    "    d_CFi = p_CF * (1+p_ytm)**-i\n",
    "    discounted_CF.append(d_CFi)\n",
    "    i += 1\n",
    "    PV += d_CFi\n",
    "d_CFi = (p_CF + par) * (1+p_ytm)**-i #special case for when the par is returned\n",
    "PV += d_CFi\n",
    "discounted_CF.append(d_CFi)\n",
    "print(f'\\nThe present value of the bond is: ${round(PV, 2)}')\n",
    "duration = 0\n",
    "i = 0\n",
    "# iterates through the discounted cash flows to calculate period duration\n",
    "while i < periods:\n",
    "    duration += (i+1) * discounted_CF[i] / PV\n",
    "    i+=1\n",
    "duration = duration / comp\n",
    "print(f'\\nThe duration is: {round(duration, 2)}')\n",
    "modDuration = duration / (1 + p_ytm) # calcualte the modified duration\n",
    "print(f'\\nThe modified duration is {round(modDuration, 2)}')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
